/*
// Definition for a Node.
class Node {
    public int val;
    public Node prev;
    public Node next;
    public Node child;
};
*/

class Solution {
    
    public Node flatten(Node head) {
        Stack<Node> st = new Stack<>();
        Node curr=head;
        while(true&&curr!=null){
            if(curr.next==null&&curr.child==null){
                if(st.empty()==true)
                    break;
                Node tmp = st.pop();
                curr.next=tmp;
                tmp.prev=curr;
                curr=tmp;
            }
            else if(curr.child!=null){
                if(curr.next!=null)
                    st.push(curr.next);
                curr.next=curr.child;
                curr.child.prev=curr;
                curr.child=null;
                curr=curr.next;  
            }
            else    
                curr=curr.next;
            
        }
        return head;
    }
}
