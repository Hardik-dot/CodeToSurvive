class Solution {
    int dp[]=new int[101];
    //recursive
    public int aux(int[] nums,int i){
        if(i>=nums.length)
            return 0;
        if(dp[i]==-1)
        dp[i]=Math.max(aux(nums,i+2)+nums[i],aux(nums,i+1));
        return dp[i];
    }
    
    //iterative
    public int rob(int[] nums) {
        Arrays.fill(dp,-1);
        //return aux(nums,0);
        if(nums.length==0) return 0;
        for(int i=0;i<nums.length;i++){
            if(i==0)
                dp[i]=nums[i];
            else if(i==1)
                dp[i]=Math.max(nums[0],nums[1]);
            else
                dp[i]=Math.max(dp[i-1],nums[i]+dp[i-2]);
        }
        return dp[nums.length-1];
    }
}
