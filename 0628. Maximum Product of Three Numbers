class Solution {
    public int maximumProduct(int[] nums) {
        if(nums.length==3){
            return nums[0]*nums[1]*nums[2];
        }
        
        PriorityQueue<Integer> pq =  new PriorityQueue<Integer>(Collections.reverseOrder()); 
        PriorityQueue<Integer> pqr =  new PriorityQueue<Integer>();
        for(int i=0;i<nums.length;i++){
            pq.add(nums[i]);
            pqr.add(nums[i]);
        }
        
        int a=pq.poll(),b=pq.poll(),c=pq.poll(),d=pqr.poll(),e=pqr.poll();
        
        return Math.max(a*b*c,a*d*e);
    }
}
