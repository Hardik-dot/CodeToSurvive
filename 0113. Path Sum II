/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> rest = new ArrayList<>();
    public void aux(TreeNode root, int ts,List<Integer> cur){
        if(root==null)
            return;
        
        if(root.left==null&&root.right==null){
            if(ts-root.val==0){
                cur.add(root.val);
               rest.add(new ArrayList<>(cur));
                cur.remove(cur.size()-1);
            }
            return;
        }

        cur.add(root.val);
        aux(root.left,ts-root.val,cur);
        aux(root.right,ts-root.val,cur);
        cur.remove(cur.size()-1);
    }
    
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> cur=new ArrayList<>();
        aux(root,targetSum,cur);
        return rest;
    }
}
