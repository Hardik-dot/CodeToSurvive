class Solution {
    public int maxProfit(int[] inventory, int orders) {
        Arrays.sort(inventory);
        long ans = 0;
        int n = inventory.length-1;
        long count = 1;
        while(orders > 0){
            if(n>0&&inventory[n]-inventory[n-1]>0&&orders>=count*(inventory[n]-inventory[n-1])){
                long a=inventory[n],b=inventory[n-1];
                ans+=count*((a*(a+1))/2-(b*(b+1))/2);
                orders-=count*(inventory[n]-inventory[n-1]);                
            }else if(n==0||inventory[n]-inventory[n-1]>0){
                long p=orders/count;
                long a=inventory[n],b=a-p;
                ans+=count*((a*(a+1))/2-(b*(b+1))/2);
                long q=orders%count;
                ans+=q*b;
                orders=0;
            }
            ans %= 1000000007;
            n --;
            count ++;
        }
        return (int)ans;
    }
}
