/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle1(ListNode head) {
        HashSet<ListNode> hs = new HashSet<>();
        ListNode curr=head;
        
        while(curr!=null){
            if(hs.contains(curr))
                return true;
            hs.add(curr);
            curr=curr.next;
        }
        return false;
    }
    
    public boolean hasCycle(ListNode head) {
        if(head==null)
            return false;
        ListNode curr=head,next=head.next;
        
        while(next!=null&&next.next!=null){
            if(curr==next)
                return true;
            curr=curr.next;
            next=next.next.next;
        }
        return false;
    }
}
