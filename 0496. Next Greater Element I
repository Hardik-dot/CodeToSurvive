class Solution {
    public int[] nextGreaterElement(int[] n1, int[] n2) {
        Stack < Integer > st = new Stack < > ();
        HashMap < Integer, Integer > map = new HashMap < > ();
        int[] res = new int[n1.length];
        
        for(int i=0;i<n2.length;i++){
            while(st.size()>0&&n2[i]>st.peek())
                map.put(st.pop(),n2[i]);
            st.add(n2[i]);
        }
        while(st.size()>0)
            map.put(st.pop(),-1);
        for(int i=0;i<n1.length;i++)
            res[i]=map.get(n1[i]);
        return res;
    }
    
    public int[] nextGreaterElementBRUTE(int[] n1, int[] n2) {
        int map[]=new int[10001];        
        for(int i=0;i<n2.length;i++)
            map[n2[i]]=i;
        
        for(int i=0;i<n1.length;i++){
            int ind=map[n1[i]];
            while(ind<n2.length){
                if(n1[i]<n2[ind])
                    break;
                ind++;
            }
            if(ind==n2.length)
                n1[i]=-1;
            else
            n1[i]=n2[ind];
        }
        return n1;
    }
}
