// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html

class PeekingIterator implements Iterator<Integer> {
    Iterator<Integer> curr;
    Integer txt=null;
	public PeekingIterator(Iterator<Integer> iterator) {
	    // initialize any member here.
	    this.curr=iterator;
	}
	
    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
        if(txt==null){
            txt=curr.next();
        }
        return txt;
	}
	
	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
        Integer itx=null;
	    if(txt!=null){
            itx=txt;
            txt=null;
        }else{
            itx=curr.next();
        }
        
        return itx;
	}
	
	@Override
	public boolean hasNext() {
	    if(txt!=null||curr.hasNext())
            return true;
        return false;
	}
}
