/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    LinkedList<Integer> ls=new LinkedList<>();
    public void aux(TreeNode root, int lvl){
        if(root==null)
            return;
        if(ls.size()==lvl)
            ls.add(0);
        if(root.left==null&&root.right==null){
            ls.set(lvl,ls.get(lvl)+root.val);
            return;
        }
        aux(root.left,lvl+1);
        aux(root.right,lvl+1);
    }
    public int deepestLeavesSum(TreeNode root) {
        aux(root,0);
        return ls.get(ls.size()-1);
    }
}
