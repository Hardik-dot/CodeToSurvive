/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode x=headA,y=headB;
        
        while(x!=y){
            x=x==null?headB:x.next;
            y=y==null?headA:y.next;
        }
        return x;
    }
        
    public ListNode getIntersectionNodehs(ListNode headA, ListNode headB) {
        HashSet<ListNode> hs = new HashSet<>();
        
        while(headA!=null&&headB!=null){
            if(hs.contains(headA))
                return headA;
            hs.add(headA);
            if(hs.contains(headB))
                return headB;
            hs.add(headB);
            headA=headA.next;headB=headB.next;
        }
        
        while(headA!=null){
           if(hs.contains(headA))
                return headA;
            hs.add(headA);
            headA=headA.next;
        }
        
        while(headB!=null){
           if(hs.contains(headB))
                return headB;
            hs.add(headB);
            headB=headB.next;
        }
        return null;
    }
}
