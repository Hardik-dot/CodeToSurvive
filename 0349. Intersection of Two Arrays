class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {  //sort; fb interview
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        HashSet<Integer> rt=new HashSet<>();
        int i=0,j=0;
        while(i<nums1.length&&j<nums2.length){
            if(nums1[i]==nums2[j]){
                rt.add(nums2[j]);
                int a=nums1[i],b=nums2[j];
                while(i<nums1.length&&nums1[i]==a)
                    i++;
                while(j<nums2.length&&nums2[j]==b)
                    j++;
                continue;
            }

            while(i<nums1.length&&nums1[i]<nums2[j])
                i++;
            while(i<nums1.length&&j<nums2.length&&nums2[j]<nums1[i])
                j++;
        }
        Iterator it = rt.iterator();
        i=0;
        int ret[]=new int[rt.size()];
        while(it.hasNext())
            ret[i++]=(int)it.next();
        return ret;
    }
    
    public int[] intersectiona(int[] nums1, int[] nums2) {
        HashSet<Integer> hs=new HashSet<>();
        HashSet<Integer> rt=new HashSet<>();
        for(int i=0;i<nums1.length;i++)
            hs.add(nums1[i]);
        for(int i=0;i<nums2.length;i++)
            if(hs.contains(nums2[i]))
                rt.add(nums2[i]);
        int ret[]=new int[rt.size()];
        Iterator it = rt.iterator();
        int i=0;
        while(it.hasNext())
            ret[i++]=(int)it.next();
        return ret;
    }
}
