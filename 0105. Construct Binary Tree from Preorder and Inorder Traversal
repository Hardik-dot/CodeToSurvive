/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode aux(int[] pre,int[] in, TreeNode curr) {
        if(pre.length==0)
            return null;
        int vpre=pre[0];
        int i=0;
        for(;i<in.length;i++)
            if(in[i]==vpre)
                break;
        curr=new TreeNode(vpre);
        curr.left=aux(Arrays.copyOfRange(pre,1,i+1),Arrays.copyOfRange(in,0,i),curr.left);
        curr.right=aux(Arrays.copyOfRange(pre,i+1,pre.length),Arrays.copyOfRange(in,i+1,in.length),curr.right);
        return curr;
        
    }
    
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        TreeNode root=null;
        TreeNode curr=root;
        return aux(preorder,inorder,curr);
        
    }
}
