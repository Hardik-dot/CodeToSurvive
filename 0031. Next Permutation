class Solution {
    public void nextPermutation(int[] nums) {
        int i=nums.length-2;
        while(i>=0){
            if(nums[i]<nums[i+1])
                break;
            i--;
        }
        if(i<0){
            Arrays.sort(nums);
            return;
        }
        
        int j=i+1,v=101,iv=0;
        while(j<nums.length){
            if(nums[i]<nums[j]&&nums[j]<=v){
                v=nums[j];
                iv=j;
            }
            j++;
        }
        swap(nums,i,iv);
        reverse(nums,i+1);
        return;
    }
    
    private void reverse(int[] nums, int start) {
        int i = start, j = nums.length - 1;
        while (i < j) {
            swap(nums, i, j);
            i++;
            j--;
        }
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
